import time
import unittest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait


class LoginPageTests(unittest.TestCase):

    @classmethod
    def setUpClass(cls):
        cls.driver = webdriver.Chrome()
        cls.driver.maximize_window()
        cls.wait = WebDriverWait(cls.driver, 10)

    def setUp(self):
        self.driver.get("https://sakshingp.github.io/assignment/login.html")

    def test_valid_login(self):
        self.login("username", "password")
        self.assertTrue(EC.presence_of_element_located((By.ID, "logout-btn")))

    def test_invalid_login(self):
        self.login("invalid_username", "invalid_password")
        self.assertTrue(EC.presence_of_element_located((By.ID, "error-message")))

    def test_blank_login(self):
        self.login("", "")
        self.assertTrue(EC.presence_of_element_located((By.ID, "error-message")))

    def login(self, username, password):
        self.driver.find_element(By.ID, "username").send_keys(username)
        self.driver.find_element(By.ID, "password").send_keys(password)
        self.driver.find_element(By.ID, "login-btn").click()
        time.sleep(2)

    @classmethod
    def tearDownClass(cls):
        cls.driver.quit()


class HomePageTests(unittest.TestCase):

    @classmethod
    def setUpClass(cls):
        cls.driver = webdriver.Chrome()
        cls.driver.maximize_window()
        cls.wait = WebDriverWait(cls.driver, 10)

        # Perform login
        cls.login("username", "password")

    def test_sort_transaction_table(self):
        amount_header = self.driver.find_element(By.XPATH, "//th[contains(text(),'AMOUNT')]")
        amount_header.click()

        transaction_rows = self.driver.find_elements(By.XPATH, "//table[@id='transactionTable']//tbody//tr")
        amounts = []

        for row in transaction_rows:
            amount = row.find_element(By.XPATH, ".//td[3]").text
            amounts.append(float(amount))

        sorted_amounts = sorted(amounts)
        self.assertEqual(amounts, sorted_amounts)

    @classmethod
    def login(cls, username, password):
        cls.driver.get("https://sakshingp.github.io/assignment/login.html")
        cls.driver.find_element(By.ID, "username").send_keys(username)
        cls.driver.find_element(By.ID, "password").send_keys(password)
        cls.driver.find_element(By.ID, "login-btn").click()
        time.sleep(2)

    @classmethod
    def tearDownClass(cls):
        cls.driver.quit()


if __name__ == "__main__":
    unittest.main()

